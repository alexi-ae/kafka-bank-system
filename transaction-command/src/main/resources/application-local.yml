server:
  port: 8083
spring:
  cloud:
    config:
      enabled: false
    discovery:
      enabled: true # Habilita la funcionalidad de descubrimiento
  application:
    name: transaction-command
  datasource:
    url: jdbc:postgresql://localhost:5432/db_transaction
    username: userbanksystem
    password: sql
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      bootstrap-servers: localhost:9092
      group-id: customer-group-id       # Nombre del grupo de consumidores
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      topic:
        transaction-deposit-result: transaction-deposit-result-topic
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      topic:
        transaction-deposit: transaction-deposit-topic
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB  # Configura el tamaño máximo del archivo individual
      max-request-size: 20MB  # Configura el tamaño máximo de la solicitud completa
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/ # Dirección del servidor Eureka
    register-with-eureka: true # Permite registrarse en Eureka
    fetch-registry: true # Obtiene el registro de servicios de Eureka
  instance:
    prefer-ip-address: true # Utiliza la IP en lugar del hostname

security:
  jwt:
    time: 1000
    secret: 33743677397A24432646294A404D635166546A576E5A7234753778214125442A
  get:
    token:
      uri: /authenticate

management:
  endpoints:
    web:
      exposure:
        include: refresh,health,info   # Habilita múltiples endpoints
  endpoint:
    refresh:
      enabled: true